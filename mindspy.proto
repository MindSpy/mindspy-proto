
option java_package = "org.mindspy.protobufs";
option java_outer_classname = "Regs";

// separate the responses (not used yet)
message Separator {
  required uint32 size = 1;
  required bool last = 2;
}

// state register 
message State {
  required uint32 address = 1;
  required uint32 payload = 2;
}

// sample
message Sample {
  required uint64 sequence = 1;
  repeated int32 payload = 2 [packed=true];
}

// mapped to ISensor::getSamples
message GetSamples {
  required uint32 count = 1;
}

// mapped to ISensor::getState
message GetState {
  repeated uint32 addresses = 1 [packed=true];
}

// mapped to ISensor::setState
message SetState {
  repeated State states = 1;
}

// maped to ISensor::getModelName
message GetModelName {
}

// request that is mapped to ISensor instances
message Request {
  // timestamp of the request
  required uint64 timestamp = 1;
  // id of the request
  required uint32 reqid = 2;
  // which ISensor to use (if undefined use all yielding in multiple responses)
  optional uint32 module = 3;
  // repeat the responses indefinitely
  optional bool stream = 4 [default = false];

  // ISensor mappings
  optional GetSamples getSamples = 5;
  optional GetState getState = 6;
  optional SetState setState = 7;
  optional GetModelName getModelName = 8;
}

// response from ISensor instances
message Response {
  // timestamp of the responses
  required uint64 timestamp = 1;
  // id of the request to which we are responding
  required uint32 reqid =2;
  // which ISensor we used to generate this reponse
  optional uint32 module = 3;

  // requested ISensor state registers (getState)
  repeated State states = 4;
  // ISensor samples
  repeated Sample samples = 5;
  // ISensor model name
  optional string modelName = 6;

  // something gone wrong?
  optional string error_msg =7;
}
